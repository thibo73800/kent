"""Generated message classes for cloudtasks version v2beta2.

Manages the execution of large numbers of distributed requests. Cloud Tasks is
in Alpha.
"""
# NOTE: This file is autogenerated and should not be edited by hand.

from apitools.base.protorpclite import messages as _messages
from apitools.base.py import encoding
from apitools.base.py import extra_types


package = 'cloudtasks'


class AcknowledgeTaskRequest(_messages.Message):
  """Request message for acknowledging a task using
  CloudTasks.AcknowledgeTask.

  Fields:
    scheduleTime: Required.  The task's current schedule time, available in
      the Task.schedule_time returned in PullTasksResponse.tasks or
      CloudTasks.RenewLease. This restriction is to check that the caller is
      acknowledging the correct task.
  """

  scheduleTime = _messages.StringField(1)


class AppEngineHttpRequest(_messages.Message):
  """App Engine HTTP request.  The message defines the HTTP request that is
  sent to an App Engine app when the task is dispatched.  This proto can only
  be used for tasks in a queue which has Queue.app_engine_http_target set.
  Using AppEngineHttpRequest requires
  [`appengine.applications.get`](/appengine/docs/admin-api/access-control)
  Google IAM permission for the project and the following scope:
  `https://www.googleapis.com/auth/cloud-platform`  The task will be delivered
  to the App Engine app which belongs to the same project as the queue. For
  more information, see [How Requests are
  Routed](/appengine/docs/standard/python/how-requests-are-routed) and how
  routing is affected by [dispatch
  files](/appengine/docs/python/config/dispatchref).  The AppEngineRouting
  used to construct the URL that the task is delivered to can be set at the
  queue-level or task-level:  *  If set,
  AppEngineHttpTarget.app_engine_routing_override is used for    all tasks in
  the queue, no matter what the setting is for the    task-level
  app_engine_routing.   The `url` that the task will be sent to is:  * `url =`
  AppEngineRouting.host `+` AppEngineHttpRequest.relative_url  The task will
  be sent to a task handler by an HTTP request using the specified
  AppEngineHttpRequest.http_method (for example POST, HTTP GET, etc). The task
  attempt has succeeded if the task handler returns an HTTP response code in
  the range [200 - 299]. Error 503 is considered an App Engine system error
  instead of an application error. Requests returning error 503 will be
  retried regardless of retry configuration and not counted against retry
  counts. Any other response code or a failure to receive a response before
  the deadline is a failed attempt.

  Enums:
    HttpMethodValueValuesEnum: The HTTP method to use for the request. The
      default is POST.  The app's request handler for the task's target URL
      must be able to handle HTTP requests with this http_method, otherwise
      the task attempt will fail with error code 405 (Method Not Allowed). See
      the Request-Line is not allowed for the resource identified by the
      Request-URI". See [Writing a push task request
      handler](/appengine/docs/java/taskqueue/push/creating-
      handlers#writing_a_push_task_request_handler) and the documentation for
      the request handlers in the language your app is written in e.g. [python
      RequestHandler](/appengine/docs/python/tools/webapp/requesthandlerclass)
      .

  Messages:
    HeadersValue: HTTP request headers.  This map contains the header field
      names and values. Headers can be set when the [task is
      created](google.cloud.tasks.v2beta2.CloudTasks.CreateTask). Repeated
      headers are not supported but a header value can contain commas.  Cloud
      Tasks sets some headers to default values:  * `User-Agent`: By default,
      this header is   `"AppEngine-Google;
      (+http://code.google.com/appengine)"`.   This header can be modified,
      but Cloud Tasks will append   `"AppEngine-Google;
      (+http://code.google.com/appengine)"` to the   modified `User-Agent`.
      If the task has an AppEngineHttpRequest.payload, Cloud Tasks sets the
      following headers:  * `Content-Type`: By default, the `Content-Type`
      header is set to   `"application/octet-stream"`. The default can be
      overridden by explictly   setting `Content-Type` to a particular media
      type when the   [task is
      created](google.cloud.tasks.v2beta2.CloudTasks.CreateTask).   For
      example, `Content-Type` can be set to `"application/json"`. * `Content-
      Length`: This is computed by Cloud Tasks. This value is   output only.
      It cannot be changed.  The headers below cannot be set or overridden:  *
      `Host` * `X-Google-*` * `X-AppEngine-*`  In addition, some App Engine
      headers, which contain task-specific information, are also be sent to
      the task handler; see [request
      headers](/appengine/docs/python/taskqueue/push/creating-
      handlers#reading_request_headers).

  Fields:
    appEngineRouting: Task-level setting for App Engine routing.  If set,
      AppEngineHttpTarget.app_engine_routing_override is used for all tasks in
      the queue, no matter what the setting is for the task-level
      app_engine_routing.
    headers: HTTP request headers.  This map contains the header field names
      and values. Headers can be set when the [task is
      created](google.cloud.tasks.v2beta2.CloudTasks.CreateTask). Repeated
      headers are not supported but a header value can contain commas.  Cloud
      Tasks sets some headers to default values:  * `User-Agent`: By default,
      this header is   `"AppEngine-Google;
      (+http://code.google.com/appengine)"`.   This header can be modified,
      but Cloud Tasks will append   `"AppEngine-Google;
      (+http://code.google.com/appengine)"` to the   modified `User-Agent`.
      If the task has an AppEngineHttpRequest.payload, Cloud Tasks sets the
      following headers:  * `Content-Type`: By default, the `Content-Type`
      header is set to   `"application/octet-stream"`. The default can be
      overridden by explictly   setting `Content-Type` to a particular media
      type when the   [task is
      created](google.cloud.tasks.v2beta2.CloudTasks.CreateTask).   For
      example, `Content-Type` can be set to `"application/json"`. * `Content-
      Length`: This is computed by Cloud Tasks. This value is   output only.
      It cannot be changed.  The headers below cannot be set or overridden:  *
      `Host` * `X-Google-*` * `X-AppEngine-*`  In addition, some App Engine
      headers, which contain task-specific information, are also be sent to
      the task handler; see [request
      headers](/appengine/docs/python/taskqueue/push/creating-
      handlers#reading_request_headers).
    httpMethod: The HTTP method to use for the request. The default is POST.
      The app's request handler for the task's target URL must be able to
      handle HTTP requests with this http_method, otherwise the task attempt
      will fail with error code 405 (Method Not Allowed). See the Request-Line
      is not allowed for the resource identified by the Request-URI". See
      [Writing a push task request
      handler](/appengine/docs/java/taskqueue/push/creating-
      handlers#writing_a_push_task_request_handler) and the documentation for
      the request handlers in the language your app is written in e.g. [python
      RequestHandler](/appengine/docs/python/tools/webapp/requesthandlerclass)
      .
    payload: Payload.  The payload will be sent as the HTTP message body. A
      message body, and thus a payload, is allowed only if the HTTP method is
      POST or PUT. It is an error to set a data payload on a task with an
      incompatible HttpMethod.
    relativeUrl: The relative URL.  The relative URL must begin with "/" and
      must be a valid HTTP relative URL. It can contain a path and query
      string arguments. If the relative URL is empty, then the root path "/"
      will be used. No spaces are allowed, and the maximum length allowed is
      2083 characters.
  """

  class HttpMethodValueValuesEnum(_messages.Enum):
    """The HTTP method to use for the request. The default is POST.  The app's
    request handler for the task's target URL must be able to handle HTTP
    requests with this http_method, otherwise the task attempt will fail with
    error code 405 (Method Not Allowed). See the Request-Line is not allowed
    for the resource identified by the Request-URI". See [Writing a push task
    request handler](/appengine/docs/java/taskqueue/push/creating-
    handlers#writing_a_push_task_request_handler) and the documentation for
    the request handlers in the language your app is written in e.g. [python
    RequestHandler](/appengine/docs/python/tools/webapp/requesthandlerclass).

    Values:
      HTTP_METHOD_UNSPECIFIED: HTTP method unspecified
      POST: HTTP Post
      GET: HTTP Get
      HEAD: HTTP Head
      PUT: HTTP Put
      DELETE: HTTP Delete
    """
    HTTP_METHOD_UNSPECIFIED = 0
    POST = 1
    GET = 2
    HEAD = 3
    PUT = 4
    DELETE = 5

  @encoding.MapUnrecognizedFields('additionalProperties')
  class HeadersValue(_messages.Message):
    """HTTP request headers.  This map contains the header field names and
    values. Headers can be set when the [task is
    created](google.cloud.tasks.v2beta2.CloudTasks.CreateTask). Repeated
    headers are not supported but a header value can contain commas.  Cloud
    Tasks sets some headers to default values:  * `User-Agent`: By default,
    this header is   `"AppEngine-Google;
    (+http://code.google.com/appengine)"`.   This header can be modified, but
    Cloud Tasks will append   `"AppEngine-Google;
    (+http://code.google.com/appengine)"` to the   modified `User-Agent`.  If
    the task has an AppEngineHttpRequest.payload, Cloud Tasks sets the
    following headers:  * `Content-Type`: By default, the `Content-Type`
    header is set to   `"application/octet-stream"`. The default can be
    overridden by explictly   setting `Content-Type` to a particular media
    type when the   [task is
    created](google.cloud.tasks.v2beta2.CloudTasks.CreateTask).   For example,
    `Content-Type` can be set to `"application/json"`. * `Content-Length`:
    This is computed by Cloud Tasks. This value is   output only. It cannot be
    changed.  The headers below cannot be set or overridden:  * `Host` *
    `X-Google-*` * `X-AppEngine-*`  In addition, some App Engine headers,
    which contain task-specific information, are also be sent to the task
    handler; see [request headers](/appengine/docs/python/taskqueue/push
    /creating-handlers#reading_request_headers).

    Messages:
      AdditionalProperty: An additional property for a HeadersValue object.

    Fields:
      additionalProperties: Additional properties of type HeadersValue
    """

    class AdditionalProperty(_messages.Message):
      """An additional property for a HeadersValue object.

      Fields:
        key: Name of the additional property.
        value: A string attribute.
      """

      key = _messages.StringField(1)
      value = _messages.StringField(2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  appEngineRouting = _messages.MessageField('AppEngineRouting', 1)
  headers = _messages.MessageField('HeadersValue', 2)
  httpMethod = _messages.EnumField('HttpMethodValueValuesEnum', 3)
  payload = _messages.BytesField(4)
  relativeUrl = _messages.StringField(5)


class AppEngineHttpTarget(_messages.Message):
  """App Engine HTTP target.  The task will be delivered to the App Engine
  application hostname specified by its AppEngineHttpTarget and
  AppEngineHttpRequest. The documentation for AppEngineHttpRequest explains
  how the task's host URL is constructed.  Using AppEngineHttpTarget requires
  [`appengine.applications.get`](/appengine/docs/admin-api/access-control)
  Google IAM permission for the project and the following scope:
  `https://www.googleapis.com/auth/cloud-platform`

  Fields:
    appEngineRoutingOverride: Overrides for the task-level app_engine_routing.
      If set, AppEngineHttpTarget.app_engine_routing_override is used for all
      tasks in the queue, no matter what the setting is for the task-level
      app_engine_routing.
  """

  appEngineRoutingOverride = _messages.MessageField('AppEngineRouting', 1)


class AppEngineQueueConfig(_messages.Message):
  """Deprecated. Use AppEngineHttpTarget.

  Fields:
    appEngineRoutingOverride: Deprecated. Use
      AppEngineHttpTarget.app_engine_routing_override.
  """

  appEngineRoutingOverride = _messages.MessageField('AppEngineRouting', 1)


class AppEngineRouting(_messages.Message):
  """App Engine Routing.  For more information about services, versions, and
  instances see [An Overview of App Engine](/appengine/docs/python/an-
  overview-of-app-engine), [Microservices Architecture on Google App
  Engine](/appengine/docs/python/microservices-on-app-engine), [App Engine
  Standard request routing](/appengine/docs/standard/python/how-requests-are-
  routed), and [App Engine Flex request
  routing](/appengine/docs/flexible/python/how-requests-are-routed).

  Fields:
    host: Output only.  The host that the task is sent to. For more
      information, see [How Requests are
      Routed](/appengine/docs/standard/python/how-requests-are-routed).  The
      host is constructed as:   * `host = [application_domain_name]`</br>   `|
      [service] + '.' + [application_domain_name]`</br>   `| [version] + '.' +
      [application_domain_name]`</br>   `| [version_dot_service]+ '.' +
      [application_domain_name]`</br>   `| [instance] + '.' +
      [application_domain_name]`</br>   `| [instance_dot_service] + '.' +
      [application_domain_name]`</br>   `| [instance_dot_version] + '.' +
      [application_domain_name]`</br>   `| [instance_dot_version_dot_service]
      + '.' + [application_domain_name]`  * `application_domain_name` = The
      domain name of the app, for   example <app-id>.appspot.com, which is
      associated with the   queue's project ID. Some tasks which were created
      using the App Engine   SDK use a custom domain name.  * `service =`
      AppEngineRouting.service  * `version =` AppEngineRouting.version  *
      `version_dot_service =`   AppEngineRouting.version `+ '.' +`
      AppEngineRouting.service  * `instance =` AppEngineRouting.instance  *
      `instance_dot_service =`   AppEngineRouting.instance `+ '.' +`
      AppEngineRouting.service  * `instance_dot_version =`
      AppEngineRouting.instance `+ '.' +` AppEngineRouting.version  *
      `instance_dot_version_dot_service =`   AppEngineRouting.instance `+ '.'
      +`   AppEngineRouting.version `+ '.' +` AppEngineRouting.service  If
      AppEngineRouting.service is empty, then the task will be sent to the
      service which is the default service when the task is attempted.  If
      AppEngineRouting.version is empty, then the task will be sent to the
      version which is the default version when the task is attempted.  If
      AppEngineRouting.instance is empty, then the task will be sent to an
      instance which is available when the task is attempted.  When
      AppEngineRouting.service is "default", AppEngineRouting.version is
      "default", and AppEngineRouting.instance is empty, AppEngineRouting.host
      is shortened to just the `application_domain_name`.  If
      AppEngineRouting.service, AppEngineRouting.version, or
      AppEngineRouting.instance is invalid, then the task will be sent to the
      default version of the default service when the task is attempted.
    instance: App instance.  By default, the task is sent to an instance which
      is available when the task is attempted.  Requests can only be sent to a
      specific instance if [manual scaling is used in App Engine
      Standard](/appengine/docs/python/an-overview-of-app-
      engine?hl=en_US#scaling_types_and_instance_classes). App Engine Flex
      does not support instances. For more information, see [App Engine
      Standard request routing](/appengine/docs/standard/python/how-requests-
      are-routed) and [App Engine Flex request
      routing](/appengine/docs/flexible/python/how-requests-are-routed).
    service: App service.  By default, the task is sent to the service which
      is the default service when the task is attempted ("default").  For some
      queues or tasks which were created using the App Engine Task Queue API,
      AppEngineRouting.host is not parsable into AppEngineRouting.service,
      AppEngineRouting.version, and AppEngineRouting.instance. For example,
      some tasks which were created using the App Engine SDK use a custom
      domain name; custom domains are not parsed by Cloud Tasks. If
      AppEngineRouting.host is not parsable, then AppEngineRouting.service,
      AppEngineRouting.version, and AppEngineRouting.instance are the empty
      string.
    version: App version.  By default, the task is sent to the version which
      is the default version when the task is attempted ("default").  For some
      queues or tasks which were created using the App Engine Task Queue API,
      AppEngineRouting.host is not parsable into AppEngineRouting.service,
      AppEngineRouting.version, and AppEngineRouting.instance. For example,
      some tasks which were created using the App Engine SDK use a custom
      domain name; custom domains are not parsed by Cloud Tasks. If
      AppEngineRouting.host is not parsable, then AppEngineRouting.service,
      AppEngineRouting.version, and AppEngineRouting.instance are the empty
      string.
  """

  host = _messages.StringField(1)
  instance = _messages.StringField(2)
  service = _messages.StringField(3)
  version = _messages.StringField(4)


class AppEngineTaskTarget(_messages.Message):
  """Deprecated. Use AppEngineHttpRequest.

  Enums:
    HttpMethodValueValuesEnum: Deprecated. Use
      AppEngineHttpRequest.http_method.

  Messages:
    HeadersValue: Deprecated. Use AppEngineHttpRequest.headers.

  Fields:
    appEngineRouting: Deprecated. Use AppEngineHttpRequest.app_engine_routing.
    headers: Deprecated. Use AppEngineHttpRequest.headers.
    httpMethod: Deprecated. Use AppEngineHttpRequest.http_method.
    payload: Deprecated. Use AppEngineHttpRequest.payload.
    relativeUrl: Deprecated. Use AppEngineHttpRequest.relative_url.
  """

  class HttpMethodValueValuesEnum(_messages.Enum):
    """Deprecated. Use AppEngineHttpRequest.http_method.

    Values:
      HTTP_METHOD_UNSPECIFIED: HTTP method unspecified
      POST: HTTP Post
      GET: HTTP Get
      HEAD: HTTP Head
      PUT: HTTP Put
      DELETE: HTTP Delete
    """
    HTTP_METHOD_UNSPECIFIED = 0
    POST = 1
    GET = 2
    HEAD = 3
    PUT = 4
    DELETE = 5

  @encoding.MapUnrecognizedFields('additionalProperties')
  class HeadersValue(_messages.Message):
    """Deprecated. Use AppEngineHttpRequest.headers.

    Messages:
      AdditionalProperty: An additional property for a HeadersValue object.

    Fields:
      additionalProperties: Additional properties of type HeadersValue
    """

    class AdditionalProperty(_messages.Message):
      """An additional property for a HeadersValue object.

      Fields:
        key: Name of the additional property.
        value: A string attribute.
      """

      key = _messages.StringField(1)
      value = _messages.StringField(2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  appEngineRouting = _messages.MessageField('AppEngineRouting', 1)
  headers = _messages.MessageField('HeadersValue', 2)
  httpMethod = _messages.EnumField('HttpMethodValueValuesEnum', 3)
  payload = _messages.BytesField(4)
  relativeUrl = _messages.StringField(5)


class AttemptStatus(_messages.Message):
  """The status of a task attempt.

  Fields:
    dispatchTime: Output only.  The time that this attempt was dispatched.
      `dispatch_time` will be truncated to the nearest microsecond.
    responseStatus: Output only.  The response from the target for this
      attempt.  If the task has not been attempted or the task is currently
      running then the response status is google.rpc.Code.UNKNOWN.
    responseTime: Output only.  The time that this attempt response was
      received.  `response_time` will be truncated to the nearest microsecond.
    scheduleTime: Output only.  The time that this attempt was scheduled.
      `schedule_time` will be truncated to the nearest microsecond.
  """

  dispatchTime = _messages.StringField(1)
  responseStatus = _messages.MessageField('Status', 2)
  responseTime = _messages.StringField(3)
  scheduleTime = _messages.StringField(4)


class Binding(_messages.Message):
  """Associates `members` with a `role`.

  Fields:
    members: Specifies the identities requesting access for a Cloud Platform
      resource. `members` can have the following values:  * `allUsers`: A
      special identifier that represents anyone who is    on the internet;
      with or without a Google account.  * `allAuthenticatedUsers`: A special
      identifier that represents anyone    who is authenticated with a Google
      account or a service account.  * `user:{emailid}`: An email address that
      represents a specific Google    account. For example, `alice@gmail.com`
      or `joe@example.com`.   * `serviceAccount:{emailid}`: An email address
      that represents a service    account. For example, `my-other-
      app@appspot.gserviceaccount.com`.  * `group:{emailid}`: An email address
      that represents a Google group.    For example, `admins@example.com`.
      * `domain:{domain}`: A Google Apps domain name that represents all the
      users of that domain. For example, `google.com` or `example.com`.
    role: Role that is assigned to `members`. For example, `roles/viewer`,
      `roles/editor`, or `roles/owner`. Required
  """

  members = _messages.StringField(1, repeated=True)
  role = _messages.StringField(2)


class CancelLeaseRequest(_messages.Message):
  """Request message for canceling a lease using CloudTasks.CancelLease.

  Enums:
    ResponseViewValueValuesEnum: The response_view specifies which subset of
      the Task will be returned.  By default response_view is Task.View.BASIC;
      not all information is retrieved by default because some data, such as
      payloads, might be desirable to return only when needed because of its
      large size or because of the sensitivity of data that it contains.
      Authorization for Task.View.FULL requires `cloudtasks.tasks.fullView`
      [Google IAM](/iam/) permission on the Task.name resource.

  Fields:
    responseView: The response_view specifies which subset of the Task will be
      returned.  By default response_view is Task.View.BASIC; not all
      information is retrieved by default because some data, such as payloads,
      might be desirable to return only when needed because of its large size
      or because of the sensitivity of data that it contains.  Authorization
      for Task.View.FULL requires `cloudtasks.tasks.fullView` [Google
      IAM](/iam/) permission on the Task.name resource.
    scheduleTime: Required.  The task's current schedule time, available in
      the Task.schedule_time returned in PullTasksResponse.tasks or
      CloudTasks.RenewLease. This restriction is to check that the caller is
      canceling the correct task.
  """

  class ResponseViewValueValuesEnum(_messages.Enum):
    """The response_view specifies which subset of the Task will be returned.
    By default response_view is Task.View.BASIC; not all information is
    retrieved by default because some data, such as payloads, might be
    desirable to return only when needed because of its large size or because
    of the sensitivity of data that it contains.  Authorization for
    Task.View.FULL requires `cloudtasks.tasks.fullView` [Google IAM](/iam/)
    permission on the Task.name resource.

    Values:
      VIEW_UNSPECIFIED: Unspecified. Defaults to BASIC.
      BASIC: The basic view omits fields which can be large or can contain
        sensitive data.  This view does not include the payload.
      FULL: All information is returned.  Payloads might be desirable to
        return only when needed, because they can be large and because of the
        sensitivity of the data that you choose to store in it.  Authorization
        for Task.View.FULL requires `cloudtasks.tasks.fullView` [Google
        IAM](https://cloud.google.com/iam/) permission on the Queue.name
        resource.
    """
    VIEW_UNSPECIFIED = 0
    BASIC = 1
    FULL = 2

  responseView = _messages.EnumField('ResponseViewValueValuesEnum', 1)
  scheduleTime = _messages.StringField(2)


class CloudtasksProjectsLocationsGetRequest(_messages.Message):
  """A CloudtasksProjectsLocationsGetRequest object.

  Fields:
    name: Resource name for the location.
  """

  name = _messages.StringField(1, required=True)


class CloudtasksProjectsLocationsListRequest(_messages.Message):
  """A CloudtasksProjectsLocationsListRequest object.

  Fields:
    filter: The standard list filter.
    name: The resource that owns the locations collection, if applicable.
    pageSize: The standard list page size.
    pageToken: The standard list page token.
  """

  filter = _messages.StringField(1)
  name = _messages.StringField(2, required=True)
  pageSize = _messages.IntegerField(3, variant=_messages.Variant.INT32)
  pageToken = _messages.StringField(4)


class CloudtasksProjectsLocationsQueuesCreateRequest(_messages.Message):
  """A CloudtasksProjectsLocationsQueuesCreateRequest object.

  Fields:
    parent: Required.  The location name in which the queue will be created.
      For example: `projects/PROJECT_ID/locations/LOCATION_ID`  The list of
      allowed locations can be obtained by calling Cloud Tasks' implementation
      of google.cloud.location.Locations.ListLocations.
    queue: A Queue resource to be passed as the request body.
  """

  parent = _messages.StringField(1, required=True)
  queue = _messages.MessageField('Queue', 2)


class CloudtasksProjectsLocationsQueuesDeleteRequest(_messages.Message):
  """A CloudtasksProjectsLocationsQueuesDeleteRequest object.

  Fields:
    name: Required.  The queue name. For example:
      `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID`
  """

  name = _messages.StringField(1, required=True)


class CloudtasksProjectsLocationsQueuesGetIamPolicyRequest(_messages.Message):
  """A CloudtasksProjectsLocationsQueuesGetIamPolicyRequest object.

  Fields:
    getIamPolicyRequest: A GetIamPolicyRequest resource to be passed as the
      request body.
    resource: REQUIRED: The resource for which the policy is being requested.
      See the operation documentation for the appropriate value for this
      field.
  """

  getIamPolicyRequest = _messages.MessageField('GetIamPolicyRequest', 1)
  resource = _messages.StringField(2, required=True)


class CloudtasksProjectsLocationsQueuesGetRequest(_messages.Message):
  """A CloudtasksProjectsLocationsQueuesGetRequest object.

  Fields:
    name: Required.  The resource name of the queue. For example:
      `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID`
  """

  name = _messages.StringField(1, required=True)


class CloudtasksProjectsLocationsQueuesListRequest(_messages.Message):
  """A CloudtasksProjectsLocationsQueuesListRequest object.

  Fields:
    filter: `filter` can be used to specify a subset of queues. Any Queue
      field can be used as a filter and several operators as supported. For
      example: `<=, <, >=, >, !=, =, :`. The filter syntax is the same as
      described in [Stackdriver's Advanced Logs
      Filters](/logging/docs/view/advanced_filters).  Sample filter
      "app_engine_http_target: *".  Note that using filters might cause fewer
      queues than the requested_page size to be returned.
    pageSize: Requested page size.  The maximum page size is 9800. If
      unspecified, the page size will be the maximum. Fewer queues than
      requested might be returned, even if more queues exist; use
      ListQueuesResponse.next_page_token to determine if more queues exist.
    pageToken: A token identifying the page of results to return.  To request
      the first page results, page_token must be empty. To request the next
      page of results, page_token must be the value of
      ListQueuesResponse.next_page_token returned from the previous call to
      CloudTasks.ListQueues method. It is an error to switch the value of
      ListQueuesRequest.filter while iterating through pages.
    parent: Required.  The location name. For example:
      `projects/PROJECT_ID/locations/LOCATION_ID`
  """

  filter = _messages.StringField(1)
  pageSize = _messages.IntegerField(2, variant=_messages.Variant.INT32)
  pageToken = _messages.StringField(3)
  parent = _messages.StringField(4, required=True)


class CloudtasksProjectsLocationsQueuesPatchRequest(_messages.Message):
  """A CloudtasksProjectsLocationsQueuesPatchRequest object.

  Fields:
    name: The queue name.  The queue name must have the following format:
      `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID`  *
      `PROJECT_ID` can contain uppercase and lowercase letters,   numbers,
      hyphens, colons, and periods; that is, it must match   the regular
      expression: `[a-zA-Z\\d-:\\.]+`. * `QUEUE_ID` can contain uppercase and
      lowercase letters,   numbers, and hyphens; that is, it must match the
      regular   expression: `[a-zA-Z\\d-]+`. The maximum length is 100
      characters.  Caller-specified and required in CreateQueueRequest, after
      which it becomes output only.
    queue: A Queue resource to be passed as the request body.
    updateMask: A mask used to specify which fields of the queue are being
      updated.  If empty, then all fields will be updated.
  """

  name = _messages.StringField(1, required=True)
  queue = _messages.MessageField('Queue', 2)
  updateMask = _messages.StringField(3)


class CloudtasksProjectsLocationsQueuesPauseRequest(_messages.Message):
  """A CloudtasksProjectsLocationsQueuesPauseRequest object.

  Fields:
    name: Required.  The queue name. For example:
      `projects/PROJECT_ID/location/LOCATION_ID/queues/QUEUE_ID`
    pauseQueueRequest: A PauseQueueRequest resource to be passed as the
      request body.
  """

  name = _messages.StringField(1, required=True)
  pauseQueueRequest = _messages.MessageField('PauseQueueRequest', 2)


class CloudtasksProjectsLocationsQueuesPurgeRequest(_messages.Message):
  """A CloudtasksProjectsLocationsQueuesPurgeRequest object.

  Fields:
    name: Required.  The queue name. For example:
      `projects/PROJECT_ID/location/LOCATION_ID/queues/QUEUE_ID`
    purgeQueueRequest: A PurgeQueueRequest resource to be passed as the
      request body.
  """

  name = _messages.StringField(1, required=True)
  purgeQueueRequest = _messages.MessageField('PurgeQueueRequest', 2)


class CloudtasksProjectsLocationsQueuesResumeRequest(_messages.Message):
  """A CloudtasksProjectsLocationsQueuesResumeRequest object.

  Fields:
    name: Required.  The queue name. For example:
      `projects/PROJECT_ID/location/LOCATION_ID/queues/QUEUE_ID`
    resumeQueueRequest: A ResumeQueueRequest resource to be passed as the
      request body.
  """

  name = _messages.StringField(1, required=True)
  resumeQueueRequest = _messages.MessageField('ResumeQueueRequest', 2)


class CloudtasksProjectsLocationsQueuesSetIamPolicyRequest(_messages.Message):
  """A CloudtasksProjectsLocationsQueuesSetIamPolicyRequest object.

  Fields:
    resource: REQUIRED: The resource for which the policy is being specified.
      See the operation documentation for the appropriate value for this
      field.
    setIamPolicyRequest: A SetIamPolicyRequest resource to be passed as the
      request body.
  """

  resource = _messages.StringField(1, required=True)
  setIamPolicyRequest = _messages.MessageField('SetIamPolicyRequest', 2)


class CloudtasksProjectsLocationsQueuesTasksAcknowledgeRequest(_messages.Message):
  """A CloudtasksProjectsLocationsQueuesTasksAcknowledgeRequest object.

  Fields:
    acknowledgeTaskRequest: A AcknowledgeTaskRequest resource to be passed as
      the request body.
    name: Required.  The task name. For example:
      `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID
      `
  """

  acknowledgeTaskRequest = _messages.MessageField('AcknowledgeTaskRequest', 1)
  name = _messages.StringField(2, required=True)


class CloudtasksProjectsLocationsQueuesTasksCancelLeaseRequest(_messages.Message):
  """A CloudtasksProjectsLocationsQueuesTasksCancelLeaseRequest object.

  Fields:
    cancelLeaseRequest: A CancelLeaseRequest resource to be passed as the
      request body.
    name: Required.  The task name. For example:
      `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID
      `
  """

  cancelLeaseRequest = _messages.MessageField('CancelLeaseRequest', 1)
  name = _messages.StringField(2, required=True)


class CloudtasksProjectsLocationsQueuesTasksCreateRequest(_messages.Message):
  """A CloudtasksProjectsLocationsQueuesTasksCreateRequest object.

  Fields:
    createTaskRequest: A CreateTaskRequest resource to be passed as the
      request body.
    parent: Required.  The queue name. For example:
      `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID`  The queue
      must already exist.
  """

  createTaskRequest = _messages.MessageField('CreateTaskRequest', 1)
  parent = _messages.StringField(2, required=True)


class CloudtasksProjectsLocationsQueuesTasksDeleteRequest(_messages.Message):
  """A CloudtasksProjectsLocationsQueuesTasksDeleteRequest object.

  Fields:
    name: Required.  The task name. For example:
      `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID
      `
  """

  name = _messages.StringField(1, required=True)


class CloudtasksProjectsLocationsQueuesTasksGetRequest(_messages.Message):
  """A CloudtasksProjectsLocationsQueuesTasksGetRequest object.

  Enums:
    ResponseViewValueValuesEnum: The response_view specifies which subset of
      the Task will be returned.  By default response_view is Task.View.BASIC;
      not all information is retrieved by default because some data, such as
      payloads, might be desirable to return only when needed because of its
      large size or because of the sensitivity of data that it contains.
      Authorization for Task.View.FULL requires `cloudtasks.tasks.fullView`
      [Google IAM](/iam/) permission on the Task.name resource.

  Fields:
    name: Required.  The task name. For example:
      `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID
      `
    responseView: The response_view specifies which subset of the Task will be
      returned.  By default response_view is Task.View.BASIC; not all
      information is retrieved by default because some data, such as payloads,
      might be desirable to return only when needed because of its large size
      or because of the sensitivity of data that it contains.  Authorization
      for Task.View.FULL requires `cloudtasks.tasks.fullView` [Google
      IAM](/iam/) permission on the Task.name resource.
  """

  class ResponseViewValueValuesEnum(_messages.Enum):
    """The response_view specifies which subset of the Task will be returned.
    By default response_view is Task.View.BASIC; not all information is
    retrieved by default because some data, such as payloads, might be
    desirable to return only when needed because of its large size or because
    of the sensitivity of data that it contains.  Authorization for
    Task.View.FULL requires `cloudtasks.tasks.fullView` [Google IAM](/iam/)
    permission on the Task.name resource.

    Values:
      VIEW_UNSPECIFIED: <no description>
      BASIC: <no description>
      FULL: <no description>
    """
    VIEW_UNSPECIFIED = 0
    BASIC = 1
    FULL = 2

  name = _messages.StringField(1, required=True)
  responseView = _messages.EnumField('ResponseViewValueValuesEnum', 2)


class CloudtasksProjectsLocationsQueuesTasksListRequest(_messages.Message):
  """A CloudtasksProjectsLocationsQueuesTasksListRequest object.

  Enums:
    ResponseViewValueValuesEnum: The response_view specifies which subset of
      the Task will be returned.  By default response_view is Task.View.BASIC;
      not all information is retrieved by default because some data, such as
      payloads, might be desirable to return only when needed because of its
      large size or because of the sensitivity of data that it contains.
      Authorization for Task.View.FULL requires `cloudtasks.tasks.fullView`
      [Google IAM](/iam/) permission on the Task.name resource.

  Fields:
    orderBy: Sort order used for the query. The only fields supported for
      sorting are `schedule_time` and `pull_message.tag`. All results will be
      returned in approximately ascending order. The default ordering is by
      `schedule_time`.
    pageSize: Requested page size. Fewer tasks than requested might be
      returned.  The maximum page size is 1000. If unspecified, the page size
      will be the maximum. Fewer tasks than requested might be returned, even
      if more tasks exist; use ListTasksResponse.next_page_token to determine
      if more tasks exist.
    pageToken: A token identifying the page of results to return.  To request
      the first page results, page_token must be empty. To request the next
      page of results, page_token must be the value of
      ListTasksResponse.next_page_token returned from the previous call to
      CloudTasks.ListTasks method.  The page token is valid for only 2 hours.
    parent: Required.  The queue name. For example:
      `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID`
    responseView: The response_view specifies which subset of the Task will be
      returned.  By default response_view is Task.View.BASIC; not all
      information is retrieved by default because some data, such as payloads,
      might be desirable to return only when needed because of its large size
      or because of the sensitivity of data that it contains.  Authorization
      for Task.View.FULL requires `cloudtasks.tasks.fullView` [Google
      IAM](/iam/) permission on the Task.name resource.
  """

  class ResponseViewValueValuesEnum(_messages.Enum):
    """The response_view specifies which subset of the Task will be returned.
    By default response_view is Task.View.BASIC; not all information is
    retrieved by default because some data, such as payloads, might be
    desirable to return only when needed because of its large size or because
    of the sensitivity of data that it contains.  Authorization for
    Task.View.FULL requires `cloudtasks.tasks.fullView` [Google IAM](/iam/)
    permission on the Task.name resource.

    Values:
      VIEW_UNSPECIFIED: <no description>
      BASIC: <no description>
      FULL: <no description>
    """
    VIEW_UNSPECIFIED = 0
    BASIC = 1
    FULL = 2

  orderBy = _messages.StringField(1)
  pageSize = _messages.IntegerField(2, variant=_messages.Variant.INT32)
  pageToken = _messages.StringField(3)
  parent = _messages.StringField(4, required=True)
  responseView = _messages.EnumField('ResponseViewValueValuesEnum', 5)


class CloudtasksProjectsLocationsQueuesTasksPullRequest(_messages.Message):
  """A CloudtasksProjectsLocationsQueuesTasksPullRequest object.

  Fields:
    name: Required.  The queue name. For example:
      `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID`
    pullTasksRequest: A PullTasksRequest resource to be passed as the request
      body.
  """

  name = _messages.StringField(1, required=True)
  pullTasksRequest = _messages.MessageField('PullTasksRequest', 2)


class CloudtasksProjectsLocationsQueuesTasksRenewLeaseRequest(_messages.Message):
  """A CloudtasksProjectsLocationsQueuesTasksRenewLeaseRequest object.

  Fields:
    name: Required.  The task name. For example:
      `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID
      `
    renewLeaseRequest: A RenewLeaseRequest resource to be passed as the
      request body.
  """

  name = _messages.StringField(1, required=True)
  renewLeaseRequest = _messages.MessageField('RenewLeaseRequest', 2)


class CloudtasksProjectsLocationsQueuesTasksRunRequest(_messages.Message):
  """A CloudtasksProjectsLocationsQueuesTasksRunRequest object.

  Fields:
    name: Required.  The task name. For example:
      `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID
      `
    runTaskRequest: A RunTaskRequest resource to be passed as the request
      body.
  """

  name = _messages.StringField(1, required=True)
  runTaskRequest = _messages.MessageField('RunTaskRequest', 2)


class CloudtasksProjectsLocationsQueuesTestIamPermissionsRequest(_messages.Message):
  """A CloudtasksProjectsLocationsQueuesTestIamPermissionsRequest object.

  Fields:
    resource: REQUIRED: The resource for which the policy detail is being
      requested. See the operation documentation for the appropriate value for
      this field.
    testIamPermissionsRequest: A TestIamPermissionsRequest resource to be
      passed as the request body.
  """

  resource = _messages.StringField(1, required=True)
  testIamPermissionsRequest = _messages.MessageField('TestIamPermissionsRequest', 2)


class CreateTaskRequest(_messages.Message):
  """Request message for CloudTasks.CreateTask.

  Enums:
    ResponseViewValueValuesEnum: The response_view specifies which subset of
      the Task will be returned.  By default response_view is Task.View.BASIC;
      not all information is retrieved by default because some data, such as
      payloads, might be desirable to return only when needed because of its
      large size or because of the sensitivity of data that it contains.
      Authorization for Task.View.FULL requires `cloudtasks.tasks.fullView`
      [Google IAM](/iam/) permission on the Task.name resource.

  Fields:
    responseView: The response_view specifies which subset of the Task will be
      returned.  By default response_view is Task.View.BASIC; not all
      information is retrieved by default because some data, such as payloads,
      might be desirable to return only when needed because of its large size
      or because of the sensitivity of data that it contains.  Authorization
      for Task.View.FULL requires `cloudtasks.tasks.fullView` [Google
      IAM](/iam/) permission on the Task.name resource.
    task: Required.  The task to add.  Task names have the following format:
      `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID
      `. The user can optionally specify a name for the task in Task.name. If
      a name is not specified then the system will generate a random unique
      task id, which will be returned in the response's Task.name.  If
      Task.schedule_time is not set or is in the past then Cloud Tasks will
      set it to the current time.  Task De-duplication:  Explicitly specifying
      a task ID enables task de-duplication.  If a task's ID is identical to
      that of an existing task or a task that was deleted or completed
      recently then the call will fail with google.rpc.Code.ALREADY_EXISTS. If
      the task's queue was created using Cloud Tasks, then another task with
      the same name can't be created for ~1hour after the original task was
      deleted or completed. If the task's queue was created using queue.yaml
      or queue.xml, then another task with the same name can't be created for
      ~9days after the original task was deleted or completed.  Because there
      is an extra lookup cost to identify duplicate task names, these
      CloudTasks.CreateTask calls have significantly increased latency. Using
      hashed strings for the task id or for the prefix of the task id is
      recommended. Choosing task ids that are sequential or have sequential
      prefixes, for example using a timestamp, causes an increase in latency
      and error rates in all task commands. The infrastructure relies on an
      approximately uniform distribution of task ids to store and serve tasks
      efficiently.
  """

  class ResponseViewValueValuesEnum(_messages.Enum):
    """The response_view specifies which subset of the Task will be returned.
    By default response_view is Task.View.BASIC; not all information is
    retrieved by default because some data, such as payloads, might be
    desirable to return only when needed because of its large size or because
    of the sensitivity of data that it contains.  Authorization for
    Task.View.FULL requires `cloudtasks.tasks.fullView` [Google IAM](/iam/)
    permission on the Task.name resource.

    Values:
      VIEW_UNSPECIFIED: Unspecified. Defaults to BASIC.
      BASIC: The basic view omits fields which can be large or can contain
        sensitive data.  This view does not include the payload.
      FULL: All information is returned.  Payloads might be desirable to
        return only when needed, because they can be large and because of the
        sensitivity of the data that you choose to store in it.  Authorization
        for Task.View.FULL requires `cloudtasks.tasks.fullView` [Google
        IAM](https://cloud.google.com/iam/) permission on the Queue.name
        resource.
    """
    VIEW_UNSPECIFIED = 0
    BASIC = 1
    FULL = 2

  responseView = _messages.EnumField('ResponseViewValueValuesEnum', 1)
  task = _messages.MessageField('Task', 2)


class Empty(_messages.Message):
  """A generic empty message that you can re-use to avoid defining duplicated
  empty messages in your APIs. A typical example is to use it as the request
  or the response type of an API method. For instance:      service Foo {
  rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);     }  The
  JSON representation for `Empty` is empty JSON object `{}`.
  """



class GetIamPolicyRequest(_messages.Message):
  """Request message for `GetIamPolicy` method."""


class ListLocationsResponse(_messages.Message):
  """The response message for Locations.ListLocations.

  Fields:
    locations: A list of locations that matches the specified filter in the
      request.
    nextPageToken: The standard List next-page token.
  """

  locations = _messages.MessageField('Location', 1, repeated=True)
  nextPageToken = _messages.StringField(2)


class ListQueuesResponse(_messages.Message):
  """Response message for CloudTasks.ListQueues.

  Fields:
    nextPageToken: A token to retrieve next page of results.  To return the
      next page of results, call CloudTasks.ListQueues with this value as the
      ListQueuesRequest.page_token.  If the next_page_token is empty, there
      are no more results.  The page token is valid for only 2 hours.
    queues: The list of queues.
  """

  nextPageToken = _messages.StringField(1)
  queues = _messages.MessageField('Queue', 2, repeated=True)


class ListTasksResponse(_messages.Message):
  """Response message for listing tasks using CloudTasks.ListTasks.

  Fields:
    nextPageToken: A token to retrieve next page of results.  To return the
      next page of results, call CloudTasks.ListTasks with this value as the
      ListTasksRequest.page_token.  If the next_page_token is empty, there are
      no more results.
    tasks: The list of tasks.
  """

  nextPageToken = _messages.StringField(1)
  tasks = _messages.MessageField('Task', 2, repeated=True)


class Location(_messages.Message):
  """A resource that represents Google Cloud Platform location.

  Messages:
    LabelsValue: Cross-service attributes for the location. For example
      {"cloud.googleapis.com/region": "us-east1"}
    MetadataValue: Service-specific metadata. For example the available
      capacity at the given location.

  Fields:
    labels: Cross-service attributes for the location. For example
      {"cloud.googleapis.com/region": "us-east1"}
    locationId: The canonical id for this location. For example: `"us-east1"`.
    metadata: Service-specific metadata. For example the available capacity at
      the given location.
    name: Resource name for the location, which may vary between
      implementations. For example: `"projects/example-project/locations/us-
      east1"`
  """

  @encoding.MapUnrecognizedFields('additionalProperties')
  class LabelsValue(_messages.Message):
    """Cross-service attributes for the location. For example
    {"cloud.googleapis.com/region": "us-east1"}

    Messages:
      AdditionalProperty: An additional property for a LabelsValue object.

    Fields:
      additionalProperties: Additional properties of type LabelsValue
    """

    class AdditionalProperty(_messages.Message):
      """An additional property for a LabelsValue object.

      Fields:
        key: Name of the additional property.
        value: A string attribute.
      """

      key = _messages.StringField(1)
      value = _messages.StringField(2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  @encoding.MapUnrecognizedFields('additionalProperties')
  class MetadataValue(_messages.Message):
    """Service-specific metadata. For example the available capacity at the
    given location.

    Messages:
      AdditionalProperty: An additional property for a MetadataValue object.

    Fields:
      additionalProperties: Properties of the object. Contains field @type
        with type URL.
    """

    class AdditionalProperty(_messages.Message):
      """An additional property for a MetadataValue object.

      Fields:
        key: Name of the additional property.
        value: A extra_types.JsonValue attribute.
      """

      key = _messages.StringField(1)
      value = _messages.MessageField('extra_types.JsonValue', 2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  labels = _messages.MessageField('LabelsValue', 1)
  locationId = _messages.StringField(2)
  metadata = _messages.MessageField('MetadataValue', 3)
  name = _messages.StringField(4)


class PauseQueueRequest(_messages.Message):
  """Request message for CloudTasks.PauseQueue."""


class Policy(_messages.Message):
  """Defines an Identity and Access Management (IAM) policy. It is used to
  specify access control policies for Cloud Platform resources.   A `Policy`
  consists of a list of `bindings`. A `Binding` binds a list of `members` to a
  `role`, where the members can be user accounts, Google groups, Google
  domains, and service accounts. A `role` is a named list of permissions
  defined by IAM.  **Example**      {       "bindings": [         {
  "role": "roles/owner",           "members": [
  "user:mike@example.com",             "group:admins@example.com",
  "domain:google.com",             "serviceAccount:my-other-
  app@appspot.gserviceaccount.com",           ]         },         {
  "role": "roles/viewer",           "members": ["user:sean@example.com"]
  }       ]     }  For a description of IAM and its features, see the [IAM
  developer's guide](https://cloud.google.com/iam).

  Fields:
    bindings: Associates a list of `members` to a `role`. `bindings` with no
      members will result in an error.
    etag: `etag` is used for optimistic concurrency control as a way to help
      prevent simultaneous updates of a policy from overwriting each other. It
      is strongly suggested that systems make use of the `etag` in the read-
      modify-write cycle to perform policy updates in order to avoid race
      conditions: An `etag` is returned in the response to `getIamPolicy`, and
      systems are expected to put that etag in the request to `setIamPolicy`
      to ensure that their change will be applied to the same version of the
      policy.  If no `etag` is provided in the call to `setIamPolicy`, then
      the existing policy is overwritten blindly.
    version: Version of the `Policy`. The default version is 0.
  """

  bindings = _messages.MessageField('Binding', 1, repeated=True)
  etag = _messages.BytesField(2)
  version = _messages.IntegerField(3, variant=_messages.Variant.INT32)


class PullMessage(_messages.Message):
  """The pull message contains data that can be used by the caller of
  CloudTasks.PullTasks to process the task.  This proto can only be used for
  tasks in a queue which has Queue.pull_target set.

  Fields:
    payload: A data payload consumed by the task worker to execute the task.
    tag: A meta-data tag for this task.  This value is used by
      CloudTasks.PullTasks calls when PullTasksRequest.filter is `tag=<tag>`.
      The tag must be less than 500 bytes.
  """

  payload = _messages.BytesField(1)
  tag = _messages.BytesField(2)


class PullQueueConfig(_messages.Message):
  """Deprecated. Use PullTarget."""


class PullTarget(_messages.Message):
  """Pull target."""


class PullTaskTarget(_messages.Message):
  """Deprecated. Use PullMessage.

  Fields:
    payload: Deprecated. Use PullMessage.payload.
    tag: Deprecated. Use PullMessage.tag.
  """

  payload = _messages.BytesField(1)
  tag = _messages.BytesField(2)


class PullTasksRequest(_messages.Message):
  """Request message for pulling tasks using CloudTasks.PullTasks.

  Enums:
    ResponseViewValueValuesEnum: The response_view specifies which subset of
      the Task will be returned.  By default response_view is Task.View.BASIC;
      not all information is retrieved by default because some data, such as
      payloads, might be desirable to return only when needed because of its
      large size or because of the sensitivity of data that it contains.
      Authorization for Task.View.FULL requires `cloudtasks.tasks.fullView`
      [Google IAM](/iam/) permission on the Task.name resource.

  Fields:
    filter: `filter` can be used to specify a subset of tasks to lease.  When
      `filter` is set to `tag=<my-tag>` then the PullTasksResponse will
      contain only tasks whose PullMessage.tag is equal to `<my-tag>`. `<my-
      tag>` must be less than 500 bytes.  When `filter` is set to
      `tag_function=oldest_tag()`, only tasks which have the same tag as the
      task with the oldest schedule_time will be returned.  Grammar Syntax:  *
      `filter = "tag=" tag | "tag_function=" function`  * `tag = string |
      bytes`  * `function = "oldest_tag()"`  The `oldest_tag()` function
      returns tasks which have the same tag as the oldest task (ordered by
      schedule time).
    leaseDuration: The duration of the lease.  Each task returned in the
      PullTasksResponse will have its Task.schedule_time set to the current
      time plus the `lease_duration`. A task that has been returned in a
      PullTasksResponse is leased -- that task will not be returned in a
      different PullTasksResponse before the Task.schedule_time.  After the
      lease holder has successfully finished the work associated with the
      task, the lease holder must call CloudTasks.AcknowledgeTask. If the task
      is not acknowledged via CloudTasks.AcknowledgeTask before the
      Task.schedule_time then it will be returned in a later PullTasksResponse
      so that another lease holder can process it.  The maximum lease duration
      is 1 week. `lease_duration` will be truncated to the nearest second.
    maxTasks: The maximum number of tasks to lease. The maximum that can be
      requested is 1000.
    responseView: The response_view specifies which subset of the Task will be
      returned.  By default response_view is Task.View.BASIC; not all
      information is retrieved by default because some data, such as payloads,
      might be desirable to return only when needed because of its large size
      or because of the sensitivity of data that it contains.  Authorization
      for Task.View.FULL requires `cloudtasks.tasks.fullView` [Google
      IAM](/iam/) permission on the Task.name resource.
  """

  class ResponseViewValueValuesEnum(_messages.Enum):
    """The response_view specifies which subset of the Task will be returned.
    By default response_view is Task.View.BASIC; not all information is
    retrieved by default because some data, such as payloads, might be
    desirable to return only when needed because of its large size or because
    of the sensitivity of data that it contains.  Authorization for
    Task.View.FULL requires `cloudtasks.tasks.fullView` [Google IAM](/iam/)
    permission on the Task.name resource.

    Values:
      VIEW_UNSPECIFIED: Unspecified. Defaults to BASIC.
      BASIC: The basic view omits fields which can be large or can contain
        sensitive data.  This view does not include the payload.
      FULL: All information is returned.  Payloads might be desirable to
        return only when needed, because they can be large and because of the
        sensitivity of the data that you choose to store in it.  Authorization
        for Task.View.FULL requires `cloudtasks.tasks.fullView` [Google
        IAM](https://cloud.google.com/iam/) permission on the Queue.name
        resource.
    """
    VIEW_UNSPECIFIED = 0
    BASIC = 1
    FULL = 2

  filter = _messages.StringField(1)
  leaseDuration = _messages.StringField(2)
  maxTasks = _messages.IntegerField(3, variant=_messages.Variant.INT32)
  responseView = _messages.EnumField('ResponseViewValueValuesEnum', 4)


class PullTasksResponse(_messages.Message):
  """Response message for pulling tasks using CloudTasks.PullTasks.

  Fields:
    tasks: The leased tasks.
  """

  tasks = _messages.MessageField('Task', 1, repeated=True)


class PurgeQueueRequest(_messages.Message):
  """Request message for CloudTasks.PurgeQueue."""


class Queue(_messages.Message):
  """A queue is a container of related tasks. Queues are configured to manage
  how those tasks are dispatched. Configurable properties include rate limits,
  retry options, target types, and others.

  Enums:
    QueueStateValueValuesEnum: Output only.  The state of the queue.
      `queue_state` can only be changed by called CloudTasks.PauseQueue,
      CloudTasks.ResumeQueue, or uploading
      [queue.yaml](/appengine/docs/python/config/queueref).
      CloudTasks.UpdateQueue cannot be used to change `queue_state`.

  Fields:
    appEngineHttpTarget: App Engine HTTP target.  An App Engine queue is a
      queue that has an AppEngineHttpTarget.
    appEngineQueueConfig: Deprecated. Use Queue.app_engine_http_target.
    name: The queue name.  The queue name must have the following format:
      `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID`  *
      `PROJECT_ID` can contain uppercase and lowercase letters,   numbers,
      hyphens, colons, and periods; that is, it must match   the regular
      expression: `[a-zA-Z\\d-:\\.]+`. * `QUEUE_ID` can contain uppercase and
      lowercase letters,   numbers, and hyphens; that is, it must match the
      regular   expression: `[a-zA-Z\\d-]+`. The maximum length is 100
      characters.  Caller-specified and required in CreateQueueRequest, after
      which it becomes output only.
    pullQueueConfig: Deprecated. Use Queue.pull_target.
    pullTarget: Pull target.  A pull queue is a queue that has a PullTarget.
    purgeTime: Output only.  The last time this queue was purged. All tasks
      that were created before this time were purged.  A queue can be purged
      using CloudTasks.PurgeQueue, the [App Engine Task Queue SDK, or the
      Cloud Console](/appengine/docs/standard/python/taskqueue/push/deleting-
      tasks-and-queues#purging_all_tasks_from_a_queue).  Purge time will be
      truncated to the nearest microsecond. Purge time will be zero if the
      queue has never been purged.
    queueState: Output only.  The state of the queue.  `queue_state` can only
      be changed by called CloudTasks.PauseQueue, CloudTasks.ResumeQueue, or
      uploading [queue.yaml](/appengine/docs/python/config/queueref).
      CloudTasks.UpdateQueue cannot be used to change `queue_state`.
    rateLimits: Rate limits for task dispatches.  Queue.rate_limits and
      Queue.retry_config are related because they both control task attempts
      however they control how tasks are attempted in different ways:  *
      Queue.rate_limits controls the total rate of dispatches from a queue
      (i.e. all traffic dispatched from the queue, regardless of whether the
      dispatch is from a first attempt or a retry). * Queue.retry_config
      controls what happens to particular a task after   its first attempt
      fails. That is, Queue.retry_config controls task   retries (the second
      attempt, third attempt, etc).
    retryConfig: Settings that determine the retry behavior.  * For tasks
      created using Cloud Tasks: the queue-level retry settings   apply to all
      tasks in the queue that were created using Cloud Tasks.   Retry settings
      cannot be set on individual tasks. * For tasks created using the App
      Engine SDK: the queue-level retry   settings apply to all tasks in the
      queue which do not have retry settings   explicitly set on the task and
      were created by the App Engine SDK. See   [App Engine
      documentation](/appengine/docs/standard/python/taskqueue/push/retrying-
      tasks).
  """

  class QueueStateValueValuesEnum(_messages.Enum):
    """Output only.  The state of the queue.  `queue_state` can only be
    changed by called CloudTasks.PauseQueue, CloudTasks.ResumeQueue, or
    uploading [queue.yaml](/appengine/docs/python/config/queueref).
    CloudTasks.UpdateQueue cannot be used to change `queue_state`.

    Values:
      QUEUE_STATE_UNSPECIFIED: Unspecified state.
      RUNNING: The queue is running. Tasks can be dispatched.
      PAUSED: Tasks are paused by the user. If the queue is paused then Cloud
        Tasks will stop delivering tasks from it, but more tasks can still be
        added to it by the user. When a pull queue is paused, all
        CloudTasks.PullTasks calls will return a `FAILED_PRECONDITION` error.
      DISABLED: The queue is disabled.  A queue becomes `DISABLED` when
        [queue.yaml](/appengine/docs/python/config/queueref) or
        [queue.xml](appengine/docs/standard/java/config/queueref) is uploaded
        which does not contain the queue. You cannot directly disable a queue.
        When a queue is disabled, tasks can still be added to a queue but the
        tasks are not dispatched and CloudTasks.PullTasks calls return a
        `FAILED_PRECONDITION` error.  To permanently delete this queue and all
        of its tasks, call CloudTasks.DeleteQueue.
    """
    QUEUE_STATE_UNSPECIFIED = 0
    RUNNING = 1
    PAUSED = 2
    DISABLED = 3

  appEngineHttpTarget = _messages.MessageField('AppEngineHttpTarget', 1)
  appEngineQueueConfig = _messages.MessageField('AppEngineQueueConfig', 2)
  name = _messages.StringField(3)
  pullQueueConfig = _messages.MessageField('PullQueueConfig', 4)
  pullTarget = _messages.MessageField('PullTarget', 5)
  purgeTime = _messages.StringField(6)
  queueState = _messages.EnumField('QueueStateValueValuesEnum', 7)
  rateLimits = _messages.MessageField('RateLimits', 8)
  retryConfig = _messages.MessageField('RetryConfig', 9)


class RateLimits(_messages.Message):
  """Rate limits.  This message determines the maximum rate that tasks can be
  dispatched by a queue, regardless of whether the dispatch is a first task
  attempt or a retry.

  Fields:
    maxBurstSize: Output only.  The max burst size limits how fast the queue
      is processed when many tasks are in the queue and the rate is high. This
      field allows the queue to have a high rate so processing starts shortly
      after a task is enqueued, but still limits resource usage when many
      tasks are enqueued in a short period of time.  * For App Engine queues,
      if   RateLimits.max_tasks_dispatched_per_second is 1, this   field is
      10; otherwise this field is   RateLimits.max_tasks_dispatched_per_second
      / 5. * For pull queues, this field is output only and always 10,000.
      Note: For App Engine queues that were created through `queue.yaml/xml`,
      `max_burst_size` might not have the same settings as specified above;
      CloudTasks.UpdateQueue can be used to set `max_burst_size` only to the
      values specified above.  This field has the same meaning as [bucket_size
      in queue.yaml](/appengine/docs/standard/python/config/queueref#bucket_si
      ze).
    maxConcurrentTasks: The maximum number of concurrent tasks that Cloud
      Tasks allows to be dispatched for this queue. After this threshold has
      been reached, Cloud Tasks stops dispatching tasks until the number of
      concurrent requests decreases.  The maximum allowed value is 5,000.  *
      For App Engine queues, this field is 10 by default. * For pull queues,
      this field is output only and always -1, which   indicates no limit.
      This field has the same meaning as [max_concurrent_requests in queue.yam
      l](/appengine/docs/standard/python/config/queueref#max_concurrent_reques
      ts).
    maxTasksDispatchedPerSecond: The maximum rate at which tasks are
      dispatched from this queue.  The maximum allowed value is 500.  * For
      App Engine queues, this field is 1 by default. * For pull queues, this
      field is output only and always 10,000.  This field has the same meaning
      as [rate in
      queue.yaml](/appengine/docs/standard/python/config/queueref#rate).
  """

  maxBurstSize = _messages.IntegerField(1, variant=_messages.Variant.INT32)
  maxConcurrentTasks = _messages.IntegerField(2, variant=_messages.Variant.INT32)
  maxTasksDispatchedPerSecond = _messages.FloatField(3)


class RenewLeaseRequest(_messages.Message):
  """Request message for renewing a lease using CloudTasks.RenewLease.

  Enums:
    ResponseViewValueValuesEnum: The response_view specifies which subset of
      the Task will be returned.  By default response_view is Task.View.BASIC;
      not all information is retrieved by default because some data, such as
      payloads, might be desirable to return only when needed because of its
      large size or because of the sensitivity of data that it contains.
      Authorization for Task.View.FULL requires `cloudtasks.tasks.fullView`
      [Google IAM](/iam/) permission on the Task.name resource.

  Fields:
    newLeaseDuration: Required.  The desired new lease duration, starting from
      now.   The maximum lease duration is 1 week. `new_lease_duration` will
      be truncated to the nearest second.
    responseView: The response_view specifies which subset of the Task will be
      returned.  By default response_view is Task.View.BASIC; not all
      information is retrieved by default because some data, such as payloads,
      might be desirable to return only when needed because of its large size
      or because of the sensitivity of data that it contains.  Authorization
      for Task.View.FULL requires `cloudtasks.tasks.fullView` [Google
      IAM](/iam/) permission on the Task.name resource.
    scheduleTime: Required.  The task's current schedule time, available in
      the Task.schedule_time returned in PullTasksResponse.tasks or
      CloudTasks.RenewLease. This restriction is to check that the caller is
      renewing the correct task.
  """

  class ResponseViewValueValuesEnum(_messages.Enum):
    """The response_view specifies which subset of the Task will be returned.
    By default response_view is Task.View.BASIC; not all information is
    retrieved by default because some data, such as payloads, might be
    desirable to return only when needed because of its large size or because
    of the sensitivity of data that it contains.  Authorization for
    Task.View.FULL requires `cloudtasks.tasks.fullView` [Google IAM](/iam/)
    permission on the Task.name resource.

    Values:
      VIEW_UNSPECIFIED: Unspecified. Defaults to BASIC.
      BASIC: The basic view omits fields which can be large or can contain
        sensitive data.  This view does not include the payload.
      FULL: All information is returned.  Payloads might be desirable to
        return only when needed, because they can be large and because of the
        sensitivity of the data that you choose to store in it.  Authorization
        for Task.View.FULL requires `cloudtasks.tasks.fullView` [Google
        IAM](https://cloud.google.com/iam/) permission on the Queue.name
        resource.
    """
    VIEW_UNSPECIFIED = 0
    BASIC = 1
    FULL = 2

  newLeaseDuration = _messages.StringField(1)
  responseView = _messages.EnumField('ResponseViewValueValuesEnum', 2)
  scheduleTime = _messages.StringField(3)


class ResumeQueueRequest(_messages.Message):
  """Request message for CloudTasks.ResumeQueue."""


class RetryConfig(_messages.Message):
  """Retry config.  These settings determine how a failed task attempt is
  retried.

  Fields:
    maxAttempts: The maximum number of attempts for a task.  Cloud Tasks will
      attempt the task `max_attempts` times (that is, if the first attempt
      fails, then there will be `max_attempts - 1` retries).  Must be > 0.
    maxBackoff: The maximum amount of time to wait before retrying a task
      after it fails. The default is 1 hour.  * For [App Engine
      queues](google.cloud.tasks.v2beta2.AppEngineHttpTarget),   this field is
      1 hour by default. * For [pull
      queues](google.cloud.tasks.v2beta2.PullTarget), this field   is output
      only and always 0.  `max_backoff` will be truncated to the nearest
      second.  This field has the same meaning as [max_backoff_seconds in queu
      e.yaml](/appengine/docs/standard/python/config/queueref#retry_parameters
      ).
    maxDoublings: The time between retries increases exponentially
      `max_doublings` times. `max_doublings` is maximum number of times that
      the interval between failed task retries will be doubled before the
      interval increases linearly. After max_doublings intervals, the retry
      interval will be 2^(max_doublings - 1) * RetryConfig.min_backoff.  * For
      [App Engine queues](google.cloud.tasks.v2beta2.AppEngineHttpTarget),
      this field is 16 by default. * For [pull
      queues](google.cloud.tasks.v2beta2.PullTarget), this field   is output
      only and always 0.  This field has the same meaning as [max_doublings in
      queue.yaml](/appengine/docs/standard/python/config/queueref#retry_parame
      ters).
    maxRetryDuration: If positive, `max_retry_duration` specifies the time
      limit for retrying a failed task, measured from when the task was first
      attempted. Once `max_retry_duration` time has passed *and* the task has
      been attempted RetryConfig.max_attempts times, no further attempts will
      be made and the task will be deleted.  If zero, then the task age is
      unlimited.  * For [App Engine
      queues](google.cloud.tasks.v2beta2.AppEngineHttpTarget),   this field is
      0 seconds by default. * For [pull
      queues](google.cloud.tasks.v2beta2.PullTarget), this   field is output
      only and always 0.  `max_retry_duration` will be truncated to the
      nearest second.  This field has the same meaning as [task_age_limit in q
      ueue.yaml](/appengine/docs/standard/python/config/queueref#retry_paramet
      ers).
    minBackoff: The minimum amount of time to wait before retrying a task
      after it fails.  * For [App Engine
      queues](google.cloud.tasks.v2beta2.AppEngineHttpTarget),   this field is
      0.1 seconds by default. * For [pull
      queues](google.cloud.tasks.v2beta2.PullTarget), this   field is output
      only and always 0.  `min_backoff` will be truncated to the nearest
      second.  This field has the same meaning as [min_backoff_seconds in queu
      e.yaml](/appengine/docs/standard/python/config/queueref#retry_parameters
      ).
    unlimitedAttempts: If true, then the number of attempts is unlimited.
  """

  maxAttempts = _messages.IntegerField(1, variant=_messages.Variant.INT32)
  maxBackoff = _messages.StringField(2)
  maxDoublings = _messages.IntegerField(3, variant=_messages.Variant.INT32)
  maxRetryDuration = _messages.StringField(4)
  minBackoff = _messages.StringField(5)
  unlimitedAttempts = _messages.BooleanField(6)


class RunTaskRequest(_messages.Message):
  """Request message for forcing a task to run now using CloudTasks.RunTask.

  Enums:
    ResponseViewValueValuesEnum: The response_view specifies which subset of
      the Task will be returned.  By default response_view is Task.View.BASIC;
      not all information is retrieved by default because some data, such as
      payloads, might be desirable to return only when needed because of its
      large size or because of the sensitivity of data that it contains.
      Authorization for Task.View.FULL requires `cloudtasks.tasks.fullView`
      [Google IAM](/iam/) permission on the Task.name resource.

  Fields:
    responseView: The response_view specifies which subset of the Task will be
      returned.  By default response_view is Task.View.BASIC; not all
      information is retrieved by default because some data, such as payloads,
      might be desirable to return only when needed because of its large size
      or because of the sensitivity of data that it contains.  Authorization
      for Task.View.FULL requires `cloudtasks.tasks.fullView` [Google
      IAM](/iam/) permission on the Task.name resource.
  """

  class ResponseViewValueValuesEnum(_messages.Enum):
    """The response_view specifies which subset of the Task will be returned.
    By default response_view is Task.View.BASIC; not all information is
    retrieved by default because some data, such as payloads, might be
    desirable to return only when needed because of its large size or because
    of the sensitivity of data that it contains.  Authorization for
    Task.View.FULL requires `cloudtasks.tasks.fullView` [Google IAM](/iam/)
    permission on the Task.name resource.

    Values:
      VIEW_UNSPECIFIED: Unspecified. Defaults to BASIC.
      BASIC: The basic view omits fields which can be large or can contain
        sensitive data.  This view does not include the payload.
      FULL: All information is returned.  Payloads might be desirable to
        return only when needed, because they can be large and because of the
        sensitivity of the data that you choose to store in it.  Authorization
        for Task.View.FULL requires `cloudtasks.tasks.fullView` [Google
        IAM](https://cloud.google.com/iam/) permission on the Queue.name
        resource.
    """
    VIEW_UNSPECIFIED = 0
    BASIC = 1
    FULL = 2

  responseView = _messages.EnumField('ResponseViewValueValuesEnum', 1)


class SetIamPolicyRequest(_messages.Message):
  """Request message for `SetIamPolicy` method.

  Fields:
    policy: REQUIRED: The complete policy to be applied to the `resource`. The
      size of the policy is limited to a few 10s of KB. An empty policy is a
      valid policy but certain Cloud Platform services (such as Projects)
      might reject them.
  """

  policy = _messages.MessageField('Policy', 1)


class StandardQueryParameters(_messages.Message):
  """Query parameters accepted by all methods.

  Enums:
    FXgafvValueValuesEnum: V1 error format.
    AltValueValuesEnum: Data format for response.

  Fields:
    f__xgafv: V1 error format.
    access_token: OAuth access token.
    alt: Data format for response.
    bearer_token: OAuth bearer token.
    callback: JSONP
    fields: Selector specifying which fields to include in a partial response.
    key: API key. Your API key identifies your project and provides you with
      API access, quota, and reports. Required unless you provide an OAuth 2.0
      token.
    oauth_token: OAuth 2.0 token for the current user.
    pp: Pretty-print response.
    prettyPrint: Returns response with indentations and line breaks.
    quotaUser: Available to use for quota purposes for server-side
      applications. Can be any arbitrary string assigned to a user, but should
      not exceed 40 characters.
    trace: A tracing token of the form "token:<tokenid>" to include in api
      requests.
    uploadType: Legacy upload protocol for media (e.g. "media", "multipart").
    upload_protocol: Upload protocol for media (e.g. "raw", "multipart").
  """

  class AltValueValuesEnum(_messages.Enum):
    """Data format for response.

    Values:
      json: Responses with Content-Type of application/json
      media: Media download with context-dependent Content-Type
      proto: Responses with Content-Type of application/x-protobuf
    """
    json = 0
    media = 1
    proto = 2

  class FXgafvValueValuesEnum(_messages.Enum):
    """V1 error format.

    Values:
      _1: v1 error format
      _2: v2 error format
    """
    _1 = 0
    _2 = 1

  f__xgafv = _messages.EnumField('FXgafvValueValuesEnum', 1)
  access_token = _messages.StringField(2)
  alt = _messages.EnumField('AltValueValuesEnum', 3, default=u'json')
  bearer_token = _messages.StringField(4)
  callback = _messages.StringField(5)
  fields = _messages.StringField(6)
  key = _messages.StringField(7)
  oauth_token = _messages.StringField(8)
  pp = _messages.BooleanField(9, default=True)
  prettyPrint = _messages.BooleanField(10, default=True)
  quotaUser = _messages.StringField(11)
  trace = _messages.StringField(12)
  uploadType = _messages.StringField(13)
  upload_protocol = _messages.StringField(14)


class Status(_messages.Message):
  """The `Status` type defines a logical error model that is suitable for
  different programming environments, including REST APIs and RPC APIs. It is
  used by [gRPC](https://github.com/grpc). The error model is designed to be:
  - Simple to use and understand for most users - Flexible enough to meet
  unexpected needs  # Overview  The `Status` message contains three pieces of
  data: error code, error message, and error details. The error code should be
  an enum value of google.rpc.Code, but it may accept additional error codes
  if needed.  The error message should be a developer-facing English message
  that helps developers *understand* and *resolve* the error. If a localized
  user-facing error message is needed, put the localized message in the error
  details or localize it in the client. The optional error details may contain
  arbitrary information about the error. There is a predefined set of error
  detail types in the package `google.rpc` that can be used for common error
  conditions.  # Language mapping  The `Status` message is the logical
  representation of the error model, but it is not necessarily the actual wire
  format. When the `Status` message is exposed in different client libraries
  and different wire protocols, it can be mapped differently. For example, it
  will likely be mapped to some exceptions in Java, but more likely mapped to
  some error codes in C.  # Other uses  The error model and the `Status`
  message can be used in a variety of environments, either with or without
  APIs, to provide a consistent developer experience across different
  environments.  Example uses of this error model include:  - Partial errors.
  If a service needs to return partial errors to the client,     it may embed
  the `Status` in the normal response to indicate the partial     errors.  -
  Workflow errors. A typical workflow has multiple steps. Each step may
  have a `Status` message for error reporting.  - Batch operations. If a
  client uses batch request and batch response, the     `Status` message
  should be used directly inside batch response, one for     each error sub-
  response.  - Asynchronous operations. If an API call embeds asynchronous
  operation     results in its response, the status of those operations should
  be     represented directly using the `Status` message.  - Logging. If some
  API errors are stored in logs, the message `Status` could     be used
  directly after any stripping needed for security/privacy reasons.

  Messages:
    DetailsValueListEntry: A DetailsValueListEntry object.

  Fields:
    code: The status code, which should be an enum value of google.rpc.Code.
    details: A list of messages that carry the error details.  There is a
      common set of message types for APIs to use.
    message: A developer-facing error message, which should be in English. Any
      user-facing error message should be localized and sent in the
      google.rpc.Status.details field, or localized by the client.
  """

  @encoding.MapUnrecognizedFields('additionalProperties')
  class DetailsValueListEntry(_messages.Message):
    """A DetailsValueListEntry object.

    Messages:
      AdditionalProperty: An additional property for a DetailsValueListEntry
        object.

    Fields:
      additionalProperties: Properties of the object. Contains field @type
        with type URL.
    """

    class AdditionalProperty(_messages.Message):
      """An additional property for a DetailsValueListEntry object.

      Fields:
        key: Name of the additional property.
        value: A extra_types.JsonValue attribute.
      """

      key = _messages.StringField(1)
      value = _messages.MessageField('extra_types.JsonValue', 2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  code = _messages.IntegerField(1, variant=_messages.Variant.INT32)
  details = _messages.MessageField('DetailsValueListEntry', 2, repeated=True)
  message = _messages.StringField(3)


class Task(_messages.Message):
  """A unit of scheduled work.

  Enums:
    ViewValueValuesEnum: Output only.  The view specifies which subset of the
      Task has been returned.

  Fields:
    appEngineHttpRequest: App Engine HTTP request that is sent to the task's
      target. Can be set only if Queue.app_engine_http_target is set.  An App
      Engine task is a task that has AppEngineHttpRequest set.
    appEngineTaskTarget: Deprecated. Use Task.app_engine_http_request.
    createTime: Output only.  The time that the task was created.
      `create_time` will be truncated to the nearest second.
    name: The task name.  The task name must have the following format:
      `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID
      `  * `PROJECT_ID` can contain uppercase and lowercase letters,
      numbers, hyphens, colons, and periods; that is, it must match   the
      regular expression: `[a-zA-Z\\d-:\\.]+`. * `QUEUE_ID` can contain
      uppercase and lowercase letters,   numbers, and hyphens; that is, it
      must match the regular   expression: `[a-zA-Z\\d-]+`. The maximum length
      is 100   characters. * `TASK_ID` contain uppercase and lowercase
      letters, numbers,   underscores, and hyphens; that is, it must match the
      regular   expression: `[a-zA-Z\\d_-]+`. The maximum length is 500
      characters.  Optionally caller-specified in CreateTaskRequest.
    pullMessage: Pull message contains data that should be used by the caller
      of CloudTasks.PullTasks to process the task. Can be set only if
      Queue.pull_target is set.  A pull task is a task that has PullMessage
      set.
    pullTaskTarget: Deprecated. Use Task.pull_message.
    scheduleTime: The time when the task is scheduled to be attempted.  For
      pull queues, this is the time when the task is available to be leased;
      if a task is currently leased, this is the time when the current lease
      expires, that is, the time that the task was leased plus the
      PullTasksRequest.lease_duration.  For App Engine queues, this is when
      the task will be attempted or retried.  `schedule_time` will be
      truncated to the nearest microsecond.
    taskStatus: Output only.  Task status.
    view: Output only.  The view specifies which subset of the Task has been
      returned.
  """

  class ViewValueValuesEnum(_messages.Enum):
    """Output only.  The view specifies which subset of the Task has been
    returned.

    Values:
      VIEW_UNSPECIFIED: Unspecified. Defaults to BASIC.
      BASIC: The basic view omits fields which can be large or can contain
        sensitive data.  This view does not include the payload.
      FULL: All information is returned.  Payloads might be desirable to
        return only when needed, because they can be large and because of the
        sensitivity of the data that you choose to store in it.  Authorization
        for Task.View.FULL requires `cloudtasks.tasks.fullView` [Google
        IAM](https://cloud.google.com/iam/) permission on the Queue.name
        resource.
    """
    VIEW_UNSPECIFIED = 0
    BASIC = 1
    FULL = 2

  appEngineHttpRequest = _messages.MessageField('AppEngineHttpRequest', 1)
  appEngineTaskTarget = _messages.MessageField('AppEngineTaskTarget', 2)
  createTime = _messages.StringField(3)
  name = _messages.StringField(4)
  pullMessage = _messages.MessageField('PullMessage', 5)
  pullTaskTarget = _messages.MessageField('PullTaskTarget', 6)
  scheduleTime = _messages.StringField(7)
  taskStatus = _messages.MessageField('TaskStatus', 8)
  view = _messages.EnumField('ViewValueValuesEnum', 9)


class TaskStatus(_messages.Message):
  """Status of the task.

  Fields:
    attemptDispatchCount: Output only.  The number of attempts dispatched.
      This count includes tasks which have been dispatched but haven't
      received a response.
    attemptResponseCount: Output only.  The number of attempts which have
      received a response.  This field is not calculated for [pull
      tasks](google.cloud.tasks.v2beta2.PullTaskTarget).
    firstAttemptStatus: Output only.  The status of the task's first attempt.
      Only AttemptStatus.dispatch_time will be set. The other AttemptStatus
      information is not retained by Cloud Tasks.  This field is not
      calculated for [pull tasks](google.cloud.tasks.v2beta2.PullTaskTarget).
    lastAttemptStatus: Output only.  The status of the task's last attempt.
      This field is not calculated for [pull
      tasks](google.cloud.tasks.v2beta2.PullTaskTarget).
  """

  attemptDispatchCount = _messages.IntegerField(1)
  attemptResponseCount = _messages.IntegerField(2)
  firstAttemptStatus = _messages.MessageField('AttemptStatus', 3)
  lastAttemptStatus = _messages.MessageField('AttemptStatus', 4)


class TestIamPermissionsRequest(_messages.Message):
  """Request message for `TestIamPermissions` method.

  Fields:
    permissions: The set of permissions to check for the `resource`.
      Permissions with wildcards (such as '*' or 'storage.*') are not allowed.
      For more information see [IAM
      Overview](https://cloud.google.com/iam/docs/overview#permissions).
  """

  permissions = _messages.StringField(1, repeated=True)


class TestIamPermissionsResponse(_messages.Message):
  """Response message for `TestIamPermissions` method.

  Fields:
    permissions: A subset of `TestPermissionsRequest.permissions` that the
      caller is allowed.
  """

  permissions = _messages.StringField(1, repeated=True)


encoding.AddCustomJsonFieldMapping(
    StandardQueryParameters, 'f__xgafv', '$.xgafv')
encoding.AddCustomJsonEnumMapping(
    StandardQueryParameters.FXgafvValueValuesEnum, '_1', '1')
encoding.AddCustomJsonEnumMapping(
    StandardQueryParameters.FXgafvValueValuesEnum, '_2', '2')
